{
  "responseTypes": {
    "ErrorResponse": {
      "error": "string",
      "message": "string (optional)",
      "code": "number (optional)"
    },
    "RegisterResponse": {
      "message": "string",
      "access_token": "string",
      "refresh_token": "string",
      "user": {
        "id": "string",
        "email": "string",
        "first_name": "string",
        "last_name": "string",
        "full_name": "string",
        "preferences": "object"
      }
    },
    "LoginResponse": {
      "access_token": "string",
      "refresh_token": "string",
      "user": {
        "id": "string",
        "email": "string",
        "first_name": "string",
        "last_name": "string",
        "full_name": "string",
        "role": "string",
        "preferences": "object"
      }
    },
    "UpdateProfileResponse": {
      "message": "string"
    },
    "RefreshTokenResponse": {
      "access_token": "string"
    },
    "CreateHouseholdResponse": {
      "message": "string",
      "household": {
        "id": "string",
        "name": "string",
        "role": "string"
      }
    },
    "HouseholdResponse": [
      {
        "id": "string",
        "name": "string",
        "role": "string",
        "memberCount": "number",
        "admin_id": "string",
        "createdAt": "string (ISO 8601)"
      }
    ],
    "HouseholdDetailsResponse": {
      "id": "string",
      "name": "string",
      "members": [
        {
          "id": "string",
          "name": "string",
          "email": "string",
          "avatar": "string (optional)",
          "role": "string",
          "joined_at": "string (ISO 8601)"
        }
      ],
      "admin_id": "string",
      "createdAt": "string (ISO 8601)"
    },
    "JoinHouseholdResponse": {
      "message": "string",
      "household": {
        "id": "string",
        "name": "string",
        "role": "string"
      }
    },
    "CreateTaskResponse": {
      "message": "string",
      "task": {
        "id": "string",
        "title": "string",
        "frequency": "string",
        "due_date": "string (ISO 8601)",
        "assigned_to": "string (optional)",
        "created_by": "string"
      }
    },
    "TaskResponse": {
      "tasks": [
        {
          "id": "string",
          "title": "string",
          "frequency": "string",
          "due_date": "string (ISO 8601)",
          "completed": "boolean",
          "completed_at": "string (ISO 8601, optional)",
          "assigned_to": "string (optional)",
          "created_by": "string"
        }
      ],
      "total": "number",
      "page": "number",
      "per_page": "number"
    },
    "CompleteTaskResponse": {
      "message": "string",
      "task": {
        "id": "string",
        "completed": "boolean",
        "completed_at": "string (ISO 8601)"
      }
    },
    "SwapTaskResponse": {
      "message": "string",
      "task": {
        "id": "string",
        "assigned_to": "string"
      }
    },
    "ChatResponse": {
      "messages": [
        {
          "id": "string",
          "content": "string",
          "is_announcement": "boolean",
          "created_at": "string (ISO 8601)",
          "user": {
            "id": "string",
            "name": "string",
            "avatar": "string (optional)"
          }
        }
      ],
      "total": "number",
      "has_more": "boolean"
    },
    "CreatePollResponse": {
      "message": "string",
      "poll": {
        "id": "string",
        "question": "string",
        "options": "object",
        "expires_at": "string (ISO 8601, optional)",
        "created_by": "string"
      }
    },
    "PollResponse": {
      "id": "string",
      "question": "string",
      "options": "object",
      "expires_at": "string (ISO 8601, optional)",
      "created_at": "string (ISO 8601)",
      "created_by": "string",
      "votes": [
        {
          "user_id": "string",
          "selected_option": "string"
        }
      ]
    },
    "VoteResponse": {
      "message": "string",
      "poll": {
        "id": "string",
        "votes": [
          {
            "user_id": "string",
            "selected_option": "string"
          }
        ]
      }
    }
  },
  "websocketEvents": {
    "NewMessageEvent": {
      "type": "new_message",
      "message": {
        "id": "string",
        "content": "string",
        "is_announcement": "boolean",
        "created_at": "string (ISO 8601)",
        "user": {
          "id": "string",
          "name": "string",
          "avatar": "string (optional)"
        }
      }
    },
    "JoinedEvent": {
      "type": "joined",
      "household_id": "string",
      "user": {
        "id": "string",
        "name": "string",
        "avatar": "string (optional)"
      }
    }
  },
  "auth": {
    "/auth/register": {
      "method": "POST",
      "requiresAuth": false,
      "params": {
        "body": {
          "email": "string (required)",
          "password": "string (required)",
          "first_name": "string (required)",
          "last_name": "string (required)",
          "preferences": "object (optional)"
        }
      },
      "response": "RegisterResponse",
      "errorResponses": {
        "400": "ErrorResponse",
        "409": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/auth/login": {
      "method": "POST",
      "requiresAuth": false,
      "params": {
        "body": {
          "email": "string (required)",
          "password": "string (required)"
        }
      },
      "response": "LoginResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/me": {
      "method": "PATCH",
      "requiresAuth": true,
      "params": {
        "body": {
          "first_name": "string (optional)",
          "last_name": "string (optional)",
          "preferences": "object (optional)",
          "password": "string (optional)"
        }
      },
      "response": "UpdateProfileResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/auth/refresh": {
      "method": "POST",
      "requiresAuth": true,
      "requiresRefreshToken": true,
      "response": "RefreshTokenResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "500": "ErrorResponse"
      }
    }
  },
  "household": {
    "/households": {
      "method": "POST",
      "requiresAuth": true,
      "params": {
        "body": {
          "name": "string (required)",
          "description": "string (optional)"
        }
      },
      "response": "CreateHouseholdResponse",
      "errorResponses": {
        "400": "ErrorResponse",
        "401": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households": {
      "method": "GET",
      "requiresAuth": true,
      "response": "HouseholdResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>": {
      "method": "GET",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        }
      },
      "response": "HouseholdDetailsResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/active": {
      "method": "GET",
      "requiresAuth": true,
      "response": "HouseholdDetailsResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>": {
      "method": "PATCH",
      "requiresAuth": true,
      "requiresAdmin": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        },
        "body": {
          "name": "string (optional)"
        }
      },
      "response": {
        "message": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>/invitations": {
      "method": "POST",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        }
      },
      "response": {
        "invitation_code": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/join-by-invitation": {
      "method": "POST",
      "requiresAuth": true,
      "params": {
        "body": {
          "invitation_code": "string (required)"
        }
      },
      "response": "JoinHouseholdResponse",
      "errorResponses": {
        "400": "ErrorResponse",
        "401": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>/members/<member_id>/role": {
      "method": "PATCH",
      "requiresAuth": true,
      "requiresAdmin": true,
      "params": {
        "path": {
          "household_id": "string (required)",
          "member_id": "string (required)"
        },
        "body": {
          "role": "string (required)"
        }
      },
      "response": {
        "message": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>/members/<member_id>": {
      "method": "DELETE",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)",
          "member_id": "string (required)"
        }
      },
      "response": {
        "message": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>": {
      "method": "DELETE",
      "requiresAuth": true,
      "requiresAdmin": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        }
      },
      "response": {
        "message": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    }
  },
  "tasks": {
    "/households/<household_id>/tasks": {
      "method": "POST",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        },
        "body": {
          "title": "string (required)",
          "frequency": "string (optional, default: 'one_time')",
          "preferred_assignee": "string (optional)",
          "due_date": "string (ISO 8601, optional)",
          "is_recurring": "boolean (optional)",
          "interval_days": "number (required if is_recurring)",
          "end_date": "string (ISO 8601, optional)"
        }
      },
      "response": "CreateTaskResponse",
      "errorResponses": {
        "400": "ErrorResponse",
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>/tasks": {
      "method": "GET",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        },
        "query": {
          "status": "string (optional, default: 'all')",
          "assignedTo": "string (optional)",
          "frequency": "string (optional, default: 'all')",
          "page": "number (optional, default: 1)",
          "per_page": "number (optional, default: 10)",
          "include_completed": "boolean (optional, default: true)"
        }
      },
      "response": "TaskResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/tasks/<task_id>/complete": {
      "method": "PATCH",
      "requiresAuth": true,
      "params": {
        "path": {
          "task_id": "string (required)"
        }
      },
      "response": "CompleteTaskResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/tasks/<task_id>/swap": {
      "method": "POST",
      "requiresAuth": true,
      "params": {
        "path": {
          "task_id": "string (required)"
        },
        "body": {
          "new_assignee_id": "string (required)"
        }
      },
      "response": "SwapTaskResponse",
      "errorResponses": {
        "400": "ErrorResponse",
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/users/<user_id>/tasks": {
      "method": "GET",
      "requiresAuth": true,
      "params": {
        "path": {
          "user_id": "string (required)"
        }
      },
      "response": "TaskResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/tasks/<task_id>": {
      "method": "DELETE",
      "requiresAuth": true,
      "params": {
        "path": {
          "task_id": "string (required)"
        }
      },
      "response": {
        "message": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/tasks/<task_id>": {
      "method": "PATCH",
      "requiresAuth": true,
      "params": {
        "path": {
          "task_id": "string (required)"
        },
        "body": {
          "title": "string (optional)",
          "due_date": "string (ISO 8601, optional)",
          "assigned_to": "string (optional)"
        }
      },
      "response": {
        "message": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    }
  },
  "calendar": {
    "/households/<household_id>/events": {
      "method": "POST",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        },
        "body": {
          "title": "string (required)",
          "start_time": "string (ISO 8601, required)",
          "end_time": "string (ISO 8601, optional)",
          "recurrence_rule": "string (optional)",
          "privacy": "string (optional, default: 'public')"
        }
      },
      "response": {
        "message": "string",
        "event_id": "string"
      },
      "errorResponses": {
        "400": "ErrorResponse",
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>/events": {
      "method": "GET",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        },
        "query": {
          "start_date": "string (ISO 8601, optional)",
          "end_date": "string (ISO 8601, optional)"
        }
      },
      "response": [
        {
          "id": "string",
          "title": "string",
          "start_time": "string (ISO 8601)",
          "end_time": "string (ISO 8601)",
          "recurrence_rule": "string",
          "privacy": "string",
          "created_by": "string",
          "is_recurring": "boolean"
        }
      ],
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/events/<event_id>": {
      "method": "PATCH",
      "requiresAuth": true,
      "params": {
        "path": {
          "event_id": "string (required)"
        },
        "body": {
          "title": "string (optional)",
          "start_time": "string (ISO 8601, optional)",
          "end_time": "string (ISO 8601, optional)",
          "privacy": "string (optional)"
        }
      },
      "response": {
        "message": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/events/<event_id>": {
      "method": "DELETE",
      "requiresAuth": true,
      "params": {
        "path": {
          "event_id": "string (required)"
        }
      },
      "response": {
        "message": "string"
      },
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/users/me/events": {
      "method": "GET",
      "requiresAuth": true,
      "response": [
        {
          "id": "string",
          "title": "string",
          "start_time": "string (ISO 8601)",
          "end_time": "string (ISO 8601)",
          "household_id": "string",
          "privacy": "string"
        }
      ],
      "errorResponses": {
        "401": "ErrorResponse",
        "500": "ErrorResponse"
      }
    }
  },
  "chat": {
    "/households/<household_id>/messages": {
      "method": "GET",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        },
        "query": {
          "limit": "number (optional)",
          "before": "string (ISO 8601, optional)"
        }
      },
      "response": "ChatResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/households/<household_id>/polls": {
      "method": "POST",
      "requiresAuth": true,
      "params": {
        "path": {
          "household_id": "string (required)"
        },
        "body": {
          "question": "string (required)",
          "options": "array of strings (required)",
          "expires_at": "string (ISO 8601, optional)"
        }
      },
      "response": "CreatePollResponse",
      "errorResponses": {
        "400": "ErrorResponse",
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/polls/<poll_id>/vote": {
      "method": "POST",
      "requiresAuth": true,
      "params": {
        "path": {
          "poll_id": "string (required)"
        },
        "body": {
          "option_index": "number (required)"
        }
      },
      "response": "VoteResponse",
      "errorResponses": {
        "400": "ErrorResponse",
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    },
    "/polls/<poll_id>": {
      "method": "GET",
      "requiresAuth": true,
      "params": {
        "path": {
          "poll_id": "string (required)"
        }
      },
      "response": "PollResponse",
      "errorResponses": {
        "401": "ErrorResponse",
        "403": "ErrorResponse",
        "404": "ErrorResponse",
        "500": "ErrorResponse"
      }
    }
  },
  "websocket": {
    "events": {
      "connect": {
        "description": "Initial connection"
      },
      "join": {
        "params": {
          "token": "string (required)",
          "household_id": "string (required)"
        },
        "response": "JoinedEvent"
      },
      "disconnect": {
        "description": "User disconnects"
      },
      "send_message": {
        "params": {
          "token": "string (required)",
          "household_id": "string (required)",
          "content": "string (required)",
          "is_announcement": "boolean (optional)"
        },
        "response": "NewMessageEvent"
      },
      "authenticate": {
        "params": {
          "token": "string (required)"
        },
        "response": {
          "user_id": "string"
        }
      },
      "join_household": {
        "params": {
          "token": "string (required)",
          "household_id": "string (required)"
        },
        "response": {
          "household_id": "string",
          "message": "string"
        }
      },
      "leave_household": {
        "params": {
          "household_id": "string (required)"
        },
        "response": {
          "household_id": "string"
        }
      },
      "edit_message": {
        "params": {
          "token": "string (required)",
          "message_id": "string (required)",
          "content": "string (required)"
        }
      },
      "delete_message": {
        "params": {
          "token": "string (required)",
          "message_id": "string (required)"
        }
      },
      "typing_start": {
        "params": {
          "token": "string (required)",
          "household_id": "string (required)"
        }
      },
      "typing_stop": {
        "params": {
          "token": "string (required)",
          "household_id": "string (required)"
        }
      }
    }
  }
}
